From 6a3b01e4042fa30d19c7be06d7231f3cea876d09 Mon Sep 17 00:00:00 2001
From: "Chris \"Koying\" Browet" <cbro@semperpax.com>
Date: Sat, 1 Nov 2014 19:53:24 +0100
Subject: [PATCH] FIX: [amcodec] remove problematic check (solves "[h264 aml
 error] 00001.ts")

---
 xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp | 20 ++++----------------
 1 file changed, 4 insertions(+), 16 deletions(-)

diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
index 39d2534..82b9e88 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
@@ -921,23 +921,11 @@ static int divx3_write_header(am_private_t *para, am_packet_t *pkt)
 
 static int h264_add_header(unsigned char *buf, int size, am_packet_t *pkt)
 {
-    // h264 annex-b
-	  if ((buf[0]==0 && buf[1]==0 && buf[2]==0 && buf[3]==1) && size < HDR_BUF_SIZE) {
-        CLog::Log(LOGDEBUG, "add four byte NAL 264 header in stream before header len=%d",size);
-        memcpy(pkt->hdr->data, buf, size);
-        pkt->hdr->size = size;
-        return PLAYER_SUCCESS;
-    }
-
-    if ((buf[0]==0 && buf[1]==0 && buf[2]==1) && size < HDR_BUF_SIZE) {
-        CLog::Log(LOGDEBUG, "add three byte NAL 264 header in stream before header len=%d",size);
-        memcpy(pkt->hdr->data, buf, size);
-        pkt->hdr->size = size;
-        return PLAYER_SUCCESS;
-    }
-
-    return PLAYER_FAILED;
+  memcpy(pkt->hdr->data, buf, size);
+  pkt->hdr->size = size;
+  return PLAYER_SUCCESS;
 }
+
 static int h264_write_header(am_private_t *para, am_packet_t *pkt)
 {
     // CLog::Log(LOGDEBUG, "h264_write_header");
